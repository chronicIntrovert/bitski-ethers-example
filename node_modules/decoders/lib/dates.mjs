import { asDate } from '../_utils.mjs'
import { define } from '../Decoder.mjs'
import { regex } from './strings.mjs'
var iso8601_re = /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:[.]\d+)?(?:Z|[+-]\d{2}:?\d{2})$/

export var date = define(function (blob, ok, err) {
  var date = asDate(blob)
  return date !== null ? ok(date) : err('Must be a Date')
})

export var iso8601 = regex(iso8601_re, 'Must be ISO8601 format').transform(function (value) {
  var date = new Date(value)

  if (isNaN(date.getTime())) {
    throw new Error('Must be valid date/time value')
  }

  return date
})
