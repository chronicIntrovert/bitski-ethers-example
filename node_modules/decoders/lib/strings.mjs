import { define } from '../Decoder.mjs'
import { either } from './unions.mjs'
import { instanceOf } from './utilities.mjs'

var url_re = /^([A-Za-z]{3,9}(?:[+][A-Za-z]{3,9})?):\/\/(?:([-;:&=+$,\w]+)@)?(?:([A-Za-z0-9.-]+)(?::([0-9]{2,5}))?)(\/(?:[-+~%/.,\w]*)?(?:\?[-+=&;%@.,\w]*)?(?:#[.,!/\w]*)?)?$/

export var string = define(function (blob, ok, err) {
  return typeof blob === 'string' ? ok(blob) : err('Must be string')
})

export var nonEmptyString = regex(/\S/, 'Must be non-empty string')

export function regex(regex, msg) {
  return string.refine(function (s) {
    return regex.test(s)
  }, msg)
}

export var email = regex(/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/, 'Must be email')

export var url = either(
  regex(url_re, 'Must be URL').transform(function (value) {
    return new URL(value)
  }),
  instanceOf(URL)
)

export var httpsUrl = url.refine(function (value) {
  return value.protocol === 'https:'
}, 'Must be an HTTPS URL')

export var uuid = regex(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i, 'Must be uuid')

export var uuidv1 = uuid.refine(function (value) {
  return value[14] === '1'
}, 'Must be uuidv1')

export var uuidv4 = uuid.refine(function (value) {
  return value[14] === '4'
}, 'Must be uuidv4')
