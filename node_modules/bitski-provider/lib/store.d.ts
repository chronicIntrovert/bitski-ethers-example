import { EthChainDefinition } from 'eth-provider-types';
import { BitskiProviderStore, EthChainDefinitionWithRpcUrl } from './types';
export declare const CHAINS_STORAGE_KEY = "bitski-chains";
export declare const CURRENT_CHAIN_STORAGE_KEY = "bitski-current-chain";
export declare class LocalStorageStore implements BitskiProviderStore {
    protected storage: Storage;
    constructor(storage?: Storage);
    keys(): string[];
    clear(): Promise<void>;
    getItem<T>(key: string): Promise<T | undefined>;
    setItem<T>(key: string, value: T): Promise<void>;
    clearItem(key: string): Promise<void>;
}
export declare class BitskiProviderStateStore {
    protected readonly store: BitskiProviderStore;
    private chains;
    private currentChainId;
    constructor(store: BitskiProviderStore);
    findChain(chainId: string): Promise<EthChainDefinitionWithRpcUrl | undefined>;
    addChain(definition: EthChainDefinition): Promise<void>;
    getCurrentChainId(): Promise<string>;
    setCurrentChainId(chainId: string): Promise<void>;
    private load;
}
