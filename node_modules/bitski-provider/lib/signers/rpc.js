"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fetch_1 = require("../utils/fetch");
const signFn = async (method, params, { config, chain }) => {
    const headers = Object.assign({}, config.additionalHeaders);
    if (config.getAccessToken) {
        headers.Authorization = `Bearer ${await config.getAccessToken()}`;
    }
    return (await (0, fetch_1.fetchJsonRpcWithRetry)(config.fetch, 5, chain.rpcUrls[0], {
        method: 'POST',
        headers,
        body: {
            id: 1,
            jsonrpc: '2.0',
            method,
            params,
        },
    }));
};
/**
 * This sign function signs by directly calling the method at the RPC endpoint,
 * without any user interaction. It requires the user to provide an access token
 * with `sign` scope, e.g. a client secret issued from the Bitski developer
 * portal.
 */
function createRpcSigner() {
    return signFn;
}
exports.default = createRpcSigner;
//# sourceMappingURL=rpc.js.map