"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTransactionValidatorMiddleware = void 0;
const eth_provider_types_1 = require("eth-provider-types");
const json_rpc_engine_1 = require("json-rpc-engine");
const request_context_1 = require("../utils/request-context");
const type_utils_1 = require("../utils/type-utils");
const createTransactionValidatorMiddleware = () => {
    return (0, json_rpc_engine_1.createAsyncMiddleware)(async (req, _res, next) => {
        if (req.method === eth_provider_types_1.EthMethod.eth_sendTransaction ||
            req.method === eth_provider_types_1.EthMethod.eth_signTransaction) {
            const [transaction] = (0, type_utils_1.expect)(req.params, `${req.method} request missing required parameters`);
            const context = (0, request_context_1.getRequestContext)(req);
            if (transaction.from === undefined) {
                const accounts = await context.request({ method: eth_provider_types_1.EthMethod.eth_accounts });
                transaction.from = accounts[0];
            }
        }
        next();
    });
};
exports.createTransactionValidatorMiddleware = createTransactionValidatorMiddleware;
//# sourceMappingURL=transaction-validator.js.map