"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSubscriptionMiddleware = void 0;
const subscriptionManager_1 = __importDefault(require("eth-json-rpc-filters/subscriptionManager"));
const legacy_middleware_1 = require("../utils/legacy-middleware");
const eth_provider_types_1 = require("eth-provider-types");
const createSubscriptionMiddleware = () => (0, legacy_middleware_1.createLegacyMiddleware)(({ blockTracker, provider, context }) => {
    const manager = (0, subscriptionManager_1.default)({ blockTracker, provider });
    manager.events.on('notification', (notification) => {
        const data = Object.assign(Object.assign({}, notification.params), { subscription: `${context.chain.chainId}:${notification.params.subscription}` });
        context.emit(eth_provider_types_1.EthEvent.message, {
            type: eth_provider_types_1.EthProviderMessageType.eth_subscription,
            data,
        });
        context.emit(eth_provider_types_1.EthEvent.data, null, { params: data });
    });
    context.addDestructor(manager.middleware.destroy);
    return manager.middleware;
});
exports.createSubscriptionMiddleware = createSubscriptionMiddleware;
//# sourceMappingURL=subscription.js.map