"use strict";
/**
 * Provider API types from: https://eips.ethereum.org/EIPS/eip-1193#appendix-i-consumer-facing-api-documentation
 * JSON RPC API types from: https://ethereum.org/en/developers/docs/apis/json-rpc/#web3_clientversion
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EthProviderMessageType = exports.EthEvent = exports.EthProviderRpcErrorCode = exports.EthBlockNumberTag = exports.EthMethod = void 0;
/***** JSON RPC *****/
var EthMethod;
(function (EthMethod) {
    EthMethod["web3_clientVersion"] = "web3_clientVersion";
    EthMethod["web3_sha3"] = "web3_sha3";
    EthMethod["net_version"] = "net_version";
    EthMethod["net_listening"] = "net_listening";
    EthMethod["net_peerCount"] = "net_peerCount";
    EthMethod["eth_protocolVersion"] = "eth_protocolVersion";
    EthMethod["eth_syncing"] = "eth_syncing";
    EthMethod["eth_coinbase"] = "eth_coinbase";
    EthMethod["eth_createAccessList"] = "eth_createAccessList";
    EthMethod["eth_feeHistory"] = "eth_feeHistory";
    EthMethod["eth_mining"] = "eth_mining";
    EthMethod["eth_hashrate"] = "eth_hashrate";
    EthMethod["eth_gasPrice"] = "eth_gasPrice";
    EthMethod["eth_accounts"] = "eth_accounts";
    EthMethod["eth_requestAccounts"] = "eth_requestAccounts";
    EthMethod["eth_blockNumber"] = "eth_blockNumber";
    EthMethod["eth_getBalance"] = "eth_getBalance";
    EthMethod["eth_getStorageAt"] = "eth_getStorageAt";
    EthMethod["eth_getTransactionCount"] = "eth_getTransactionCount";
    EthMethod["eth_getBlockTransactionCountByHash"] = "eth_getBlockTransactionCountByHash";
    EthMethod["eth_getBlockTransactionCountByNumber"] = "eth_getBlockTransactionCountByNumber";
    EthMethod["eth_getUncleCountByBlockHash"] = "eth_getUncleCountByBlockHash";
    EthMethod["eth_getUncleCountByBlockNumber"] = "eth_getUncleCountByBlockNumber";
    EthMethod["eth_getCode"] = "eth_getCode";
    EthMethod["eth_sign"] = "eth_sign";
    EthMethod["eth_signTransaction"] = "eth_signTransaction";
    EthMethod["eth_signTypedData"] = "eth_signTypedData";
    EthMethod["eth_signTypedData_v1"] = "eth_signTypedData_v1";
    EthMethod["eth_signTypedData_v3"] = "eth_signTypedData_v3";
    EthMethod["eth_signTypedData_v4"] = "eth_signTypedData_v4";
    EthMethod["eth_sendTransaction"] = "eth_sendTransaction";
    EthMethod["eth_sendRawTransaction"] = "eth_sendRawTransaction";
    EthMethod["eth_call"] = "eth_call";
    EthMethod["eth_estimateGas"] = "eth_estimateGas";
    EthMethod["eth_getBlockByHash"] = "eth_getBlockByHash";
    EthMethod["eth_getBlockByNumber"] = "eth_getBlockByNumber";
    EthMethod["eth_getTransactionByHash"] = "eth_getTransactionByHash";
    EthMethod["eth_getTransactionByBlockHashAndIndex"] = "eth_getTransactionByBlockHashAndIndex";
    EthMethod["eth_getTransactionByBlockNumberAndIndex"] = "eth_getTransactionByBlockNumberAndIndex";
    EthMethod["eth_getTransactionReceipt"] = "eth_getTransactionReceipt";
    EthMethod["eth_getUncleByBlockHashAndIndex"] = "eth_getUncleByBlockHashAndIndex";
    EthMethod["eth_getUncleByBlockNumberAndIndex"] = "eth_getUncleByBlockNumberAndIndex";
    EthMethod["eth_maxPriorityFeePerGas"] = "eth_maxPriorityFeePerGas";
    EthMethod["eth_newFilter"] = "eth_newFilter";
    EthMethod["eth_newBlockFilter"] = "eth_newBlockFilter";
    EthMethod["eth_newPendingTransactionFilter"] = "eth_newPendingTransactionFilter";
    EthMethod["eth_uninstallFilter"] = "eth_uninstallFilter";
    EthMethod["eth_getFilterChanges"] = "eth_getFilterChanges";
    EthMethod["eth_getFilterLogs"] = "eth_getFilterLogs";
    EthMethod["eth_getLogs"] = "eth_getLogs";
    EthMethod["eth_getProof"] = "eth_getProof";
    EthMethod["eth_getWork"] = "eth_getWork";
    EthMethod["eth_submitWork"] = "eth_submitWork";
    EthMethod["eth_submitHashrate"] = "eth_submitHashrate";
    EthMethod["eth_chainId"] = "eth_chainId";
    EthMethod["eth_subscribe"] = "eth_subscribe";
    EthMethod["eth_unsubscribe"] = "eth_unsubscribe";
    EthMethod["wallet_addEthereumChain"] = "wallet_addEthereumChain";
    EthMethod["wallet_switchEthereumChain"] = "wallet_switchEthereumChain";
    EthMethod["wallet_requestPermissions"] = "wallet_requestPermissions";
    EthMethod["wallet_getPermissions"] = "wallet_getPermissions";
})(EthMethod = exports.EthMethod || (exports.EthMethod = {}));
var EthBlockNumberTag;
(function (EthBlockNumberTag) {
    EthBlockNumberTag["Latest"] = "latest";
    EthBlockNumberTag["Earliest"] = "earliest";
    EthBlockNumberTag["Pending"] = "pending";
})(EthBlockNumberTag = exports.EthBlockNumberTag || (exports.EthBlockNumberTag = {}));
/***** RPC Errors *****/
var EthProviderRpcErrorCode;
(function (EthProviderRpcErrorCode) {
    EthProviderRpcErrorCode[EthProviderRpcErrorCode["UserRejectedRequest"] = 4001] = "UserRejectedRequest";
    EthProviderRpcErrorCode[EthProviderRpcErrorCode["Unauthorized"] = 4100] = "Unauthorized";
    EthProviderRpcErrorCode[EthProviderRpcErrorCode["UnsupportedMethod"] = 4200] = "UnsupportedMethod";
    EthProviderRpcErrorCode[EthProviderRpcErrorCode["Disconnected"] = 4900] = "Disconnected";
    EthProviderRpcErrorCode[EthProviderRpcErrorCode["ChainDisconnected"] = 4901] = "ChainDisconnected";
})(EthProviderRpcErrorCode = exports.EthProviderRpcErrorCode || (exports.EthProviderRpcErrorCode = {}));
/***** Events *****/
var EthEvent;
(function (EthEvent) {
    EthEvent["message"] = "message";
    EthEvent["connect"] = "connect";
    EthEvent["disconnect"] = "disconnect";
    EthEvent["chainChanged"] = "chainChanged";
    EthEvent["accountsChanged"] = "accountsChanged";
    EthEvent["data"] = "data";
})(EthEvent = exports.EthEvent || (exports.EthEvent = {}));
var EthProviderMessageType;
(function (EthProviderMessageType) {
    EthProviderMessageType["eth_subscription"] = "eth_subscription";
})(EthProviderMessageType = exports.EthProviderMessageType || (exports.EthProviderMessageType = {}));
//# sourceMappingURL=index.js.map